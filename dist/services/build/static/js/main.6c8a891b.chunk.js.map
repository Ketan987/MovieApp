{"version":3,"sources":["components/reducer/users.ts","components/reducer/reducer.ts","components/reducer/blogs.ts","store/Store.ts","components/screens/navbar.tsx","components/screens/Showall.tsx","components/requests/getDetailsByimdb.tsx","components/screens/details.tsx","components/requests/getSearchbytext.tsx","components/screens/searchScreen.tsx","App.tsx","index.tsx"],"names":["initialState","login","combineReducers","blogs","state","action","type","payload","userState","user","store","createStore","reducers","compose","applyMiddleware","thunk","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","props","classes","useState","query","setQuery","useSelector","history","useDispatch","useHistory","console","log","Fragment","Toolbar","className","Typography","component","variant","align","noWrap","InputBase","placeholder","root","input","inputProps","onChange","e","currentTarget","value","IconButton","onClick","startsWith","push","Button","size","content","mainGrid","avatar","card","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","cardGrid","paddingBottom","pagination","Showall","cardStyles","data","setData","page","setPage","getData","a","axios","method","url","output","useEffect","then","Search","Container","maxWidth","Grid","container","map","item","xs","sm","md","Card","CardMedia","image","Poster","title","Title","imdbID","CardContent","gutterBottom","Year","Pagination","count","event","GetDetails","id","Details","params","useParams","present","detail","setDetails","src","Released","Director","Writer","Actors","Language","imdbRating","Plot","GetmovieByText","name","SearchbyText","location","useLocation","includes","substring","split","queries","searchQueryHandler","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c8a891b.chunk.js","sourcesContent":["const initialState = {\r\n  login : false\r\n}\r\n\r\n\r\nexport default (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n      case \"SIGN-IN\":\r\n        return {\r\n          ...state,\r\n          login : true,\r\n          user : action.payload\r\n        };\r\n      case \"SIGN_OUT\":\r\n        return {\r\n          ...state,\r\n          login : false,\r\n          user : {}\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { combineReducers } from \"redux\";\r\nimport blogs from \"./blogs\";\r\nimport userState from './users';\r\n\r\nexport default combineReducers({\r\n  blogs,\r\n  userState\r\n});\r\n","export default (state = [], action: any) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import redux, { createStore, applyMiddleware,compose } from \"redux\";\r\nimport reducers from \"../components/reducer/reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers , compose(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Link from '@material-ui/core/Link';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n  },\r\n  search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Header(props:any) {\r\n  const classes = useStyles();\r\n  const [query, setQuery] = useState(\" \");\r\n  const userState = useSelector((state:any)=> state.userState);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n  console.log(userState);\r\n\r\n\r\n  const handleSearch = () =>{\r\n    if(query.startsWith(\"tt\")){\r\n      history.push(\"/details/imdb/\"+query);\r\n    }\r\n    else{\r\n      history.push(\"/search?name=\"+query);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar className={classes.toolbar}>\r\n        \r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        > \r\n        Movies\r\n      \r\n        </Typography>\r\n      \r\n     \r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange = {(e:React.ChangeEvent<HTMLInputElement>) => {setQuery(e.currentTarget.value)}}\r\n            />\r\n            <IconButton onClick = {handleSearch}>\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </div>\r\n        {userState.login ? null:\r\n        <Button variant=\"outlined\" size=\"small\" onClick = {() =>{console.log('hello')}}>\r\n          Sign In\r\n        </Button>}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React, { useEffect, useState } from 'react';\r\nimport AllData from '../requests/getPost';\r\nimport axios from 'axios';\r\n// material ui library\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Avatar, Container, Typography,} from '@material-ui/core';\r\nimport {Box} from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {FavoriteBorderRounded} from '@material-ui/icons';\r\nimport {Share} from '@material-ui/icons';\r\nimport { Paper, Grid } from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n\r\n    },\r\n    content: {\r\n\r\n    },\r\n    mainGrid: {\r\n      },\r\n    avatar: {\r\n\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      cardContent: {\r\n        flexGrow: 1,\r\n      },\r\n      cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n      },\r\n      pagination : {\r\n        padding : \"10%\",\r\n        width : \"80%\"\r\n      }\r\n    \r\n  }));\r\n\r\n\r\nconst Showall = () =>{\r\n    const cardStyles = useStyles();\r\n    const history = useHistory();\r\n    const [data, setData] = useState<any>([{}]);\r\n    const [page, setPage] = useState(1);\r\n    // const mediaStyles = useSlopeCardMediaStyles();\r\n\r\n\r\n    const handleDetailer = (imdbID:string) =>{\r\n      history.push(\"/details/imdb/\"+imdbID);\r\n    }\r\n\r\n    \r\n    const handlePagination = (event: React.ChangeEvent<unknown>, value: number) => {\r\n      setPage(value)\r\n      getData()\r\n      .then(data =>{\r\n        setData(data.Search)\r\n      })\r\n    }\r\n\r\n    const getData = async() =>{\r\n      const output = await axios({\r\n        method : 'GET',\r\n        url : 'http://www.omdbapi.com/?apikey=c6a23ed0&s=batman&page='+page\r\n       })\r\n       return output.data\r\n    }\r\n\r\n    useEffect(()=>{\r\n      getData()\r\n      .then(data =>{\r\n        setData(data.Search)\r\n      })\r\n    }, [])\r\n\r\n    return(\r\n      <div>\r\n      <Container className={cardStyles.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n            {data.map((card:any) => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={cardStyles.card}>\r\n                  <CardMedia\r\n                    className={cardStyles.cardMedia}\r\n                    image= {card.Poster}\r\n                    title= {card.Title}\r\n                    onClick = {() => handleDetailer(card.imdbID)}\r\n                  />\r\n                  <CardContent className={cardStyles.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.Title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      Year : {card.Year}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            </Grid>\r\n            <Grid item xs = {12} className = {cardStyles.pagination}>\r\n              <Pagination count={10}  color=\"primary\" onChange = {handlePagination}/>\r\n            </Grid>\r\n        </Container>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Showall;\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst GetDetails = async(id:string) =>{\r\n    const output = await axios({\r\n        method : 'GET',\r\n        url : \"http://localhost:5000/api/movie/\"+id\r\n    })\r\n    return output.data\r\n}\r\n\r\n\r\nexport default GetDetails;","import { Container, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport GetDetails from '../requests/getDetailsByimdb';\r\n\r\n\r\nconst Details = () =>{\r\n    const params = useParams<any>();\r\n    const [detail, setDetails] = useState<any>({present : {}});\r\n    const [yes, setYes] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        // console.log(\"yes it's running\")\r\n        if(params.type === \"imdb\"){\r\n            GetDetails(params.id)\r\n            .then(data => {\r\n                console.log(data)\r\n                setDetails(data);\r\n            })\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <img src = {detail.present.Poster} />   \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <Typography variant = {\"h4\"} >\r\n                        {detail.present.Title}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Released On: {detail.present.Released}\r\n                    </Typography>\r\n                    <Typography>\r\n                        {detail.present.Director}\r\n                    </Typography>\r\n                    <Typography >\r\n                        Writers : {detail.present.Writer}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Actors : {detail.present.Actors}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Language : {detail.present.Language}\r\n                    </Typography>\r\n                    <Typography >\r\n                        Rating : {detail.present.imdbRating}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Plot: {detail.present.Plot}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Details;","import axios from 'axios';\r\n\r\nconst GetmovieByText = async(name:string) =>{\r\n    const output = await axios({\r\n        method : 'GET',\r\n        url : \"http://localhost:5000/api/movies/containing/\"+name\r\n    })\r\n    return output.data\r\n}\r\n\r\n\r\nexport default GetmovieByText;","import React, { useEffect, useState } from 'react';\r\nimport AllData from '../requests/getPost';\r\nimport axios from 'axios';\r\n// material ui library\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Avatar, Container, Typography,} from '@material-ui/core';\r\nimport {Box} from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {FavoriteBorderRounded, LocationCityTwoTone} from '@material-ui/icons';\r\nimport {Share} from '@material-ui/icons';\r\nimport { Paper, Grid } from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport GetmovieByText from '../requests/getSearchbytext';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n\r\n    },\r\n    content: {\r\n\r\n    },\r\n    mainGrid: {\r\n      },\r\n    avatar: {\r\n\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      cardContent: {\r\n        flexGrow: 1,\r\n      },\r\n      cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n      },\r\n      pagination : {\r\n        padding : \"10%\",\r\n        width : \"80%\"\r\n      }\r\n    \r\n  }));\r\n\r\n\r\nconst SearchbyText = (props:any) =>{\r\n    const cardStyles = useStyles();\r\n    const [data, setData] = useState<any>([{}]);\r\n    const [page, setPage] = useState(1);\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    // const mediaStyles = useSlopeCardMediaStyles();\r\n\r\n\r\n    const handlePagination = (event: React.ChangeEvent<unknown>, value: number) => {\r\n      setPage(value)\r\n     \r\n    }\r\n    const handleDetailer = (imdbID:string) =>{\r\n      history.push(\"/details/imdb/\"+imdbID);\r\n    }\r\n\r\n  \r\n    const searchQueryHandler = () => {\r\n      if(location.search.includes(\"&\")){\r\n        let queries = location.search.substring(1).split(\"&\");\r\n        return \"none\"\r\n      }\r\n      else{\r\n        let queries = location.search.substring(1).split(\"=\");\r\n        console.log(queries)\r\n        if(queries[0] === \"name\")\r\n          return queries[1];\r\n        else\r\n          return \"batman\"\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n      GetmovieByText(searchQueryHandler())\r\n      .then(data => {\r\n        setData(data.Search);\r\n      })\r\n\r\n    }, [])\r\n\r\n    return(\r\n      <div>\r\n      <Container className={cardStyles.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n            {data.map((card:any) => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={cardStyles.card}>\r\n                  <CardMedia\r\n                    className={cardStyles.cardMedia}\r\n                    image= {card.Poster}\r\n                    title= {card.Title}\r\n                    onClick = {() => handleDetailer(card.imdbID)}\r\n                  />\r\n                  <CardContent className={cardStyles.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.Title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      Year : {card.Year}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            </Grid>\r\n            <Grid item xs = {12} className = {cardStyles.pagination}>\r\n              <Pagination count={10}  color=\"primary\" onChange = {handlePagination}/>\r\n            </Grid>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchbyText;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport { Route, BrowserRouter as Router , Switch } from 'react-router-dom'\r\n\r\nimport store from \"./store/Store\";\r\n\r\nimport Navbar from './components/screens/navbar';\r\nimport Showall from './components/screens/Showall';\r\nimport Details from './components/screens/details';\r\nimport Searching from './components/screens/searchScreen';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Navbar />\r\n          \r\n              <Switch>\r\n                <Route path = \"/search\">\r\n                  <Searching />\r\n                </Route>\r\n                <Route exact path = \"/\">\r\n                  <Showall />\r\n                </Route>\r\n                <Route path = \"/details/:type/:id\">\r\n                  <Details />\r\n                </Route>\r\n              </Switch>\r\n          </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}